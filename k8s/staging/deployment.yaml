apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: prep-manager-staging
  name: prep-manager-staging
  namespace: prep
spec:
  progressDeadlineSeconds: 2147483647
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      name: prep-manager-staging
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: prep-manager-staging
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: In
                    values:
                      - webapps
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: name
                      operator: In
                      values:
                        - prep-manager-staging
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - env:
            - name: NODE_ENV
              value: production
            - namne: API_ENV
              value: production,preproduction
            - name: SESSION_ENV
              value: staging
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  key: RW_SECRET
                  name: appsecrets
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  key: REDIS_URI
                  name: dbsecrets
          image: vizzuality/prep-manager
          imagePullPolicy: Always
          name: prep-manager-staging
          ports:
            - containerPort: 3000
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
            limits:
              memory: "1Gi"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      terminationGracePeriodSeconds: 30
status: { }
