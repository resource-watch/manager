apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    name: {name}-staging
  name: {name}-staging
spec:
  revisionHistoryLimit: 0
  template:
    metadata:
      annotations:
        chaos.alpha.kubernetes.io/enabled: "true"
      labels:
        name: {name}-staging
    spec:
      tolerations:
      - key: "type"
        operator: "Equal"
        value: "webapps"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: type
                operator: In
                values:
                - webapps
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - {name}-staging
              topologyKey: kubernetes.io/hostname
      containers:
      - name: {name}-staging
        image: vizzuality/{name}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "0Mi"
            cpu: "0m"
        env:
          - name: NODE_ENV
            value: "production"
          - name: SESSION_ENV
            value: "staging"
          - name: SECRET
            valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: RW_SECRET
          - name: USERNAME
            valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: RW_USERNAME
          - name: RW_USERNAME
            valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: RW2_USERNAME
          - name: RW_PASSWORD
            valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: RW2_PASSWORD
          - name: PASSWORD
            valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: RW_PASSWORD
          - name: REDIS_URL
            valueFrom:
                secretKeyRef:
                  name: dbsecrets
                  key: REDIS_URI
        ports:
          - containerPort: 3000
      restartPolicy: Always
